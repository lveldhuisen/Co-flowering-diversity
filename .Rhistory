xlab("Week", size = "12") +
ylab("Standard effect size")+
theme_light() +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-5.9,2) +
facet_grid(Year~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
#make figure with both years combined-------------
fig_pd_weeks <- ggplot(all_weeks_pd, aes(fill = Type, y=SES, x=fct_relevel(Week, c("1","2","3","4","5","6","7","8","9","10")))) +
geom_bar(position = "dodge",stat = "identity") +
xlab("Week") +
ylab("Standard effect size")+
theme_light(axis.text=element_text(size=12)) +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-5.9,2) +
facet_grid(Year~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
theme_light(axis.text=element_text(size=12) +
facet_grid(Year~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)"))
#make figure with both years combined-------------
fig_pd_weeks <- ggplot(all_weeks_pd, aes(fill = Type, y=SES, x=fct_relevel(Week, c("1","2","3","4","5","6","7","8","9","10")))) +
geom_bar(position = "dodge",stat = "identity") +
xlab("Week") +
ylab("Standard effect size")+
theme_light(axis.text=element_text(size=12)) +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-5.9,2) +
facet_grid(Year~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
#make figure with both years combined-------------
fig_pd_weeks <- ggplot(all_weeks_pd, aes(fill = Type, y=SES, x=fct_relevel(Week, c("1","2","3","4","5","6","7","8","9","10")))) +
geom_bar(position = "dodge",stat = "identity") +
xlab("Week") +
ylab("Standard effect size")+
theme_light(base_size = 12) +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-5.9,2) +
facet_grid(Year~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
plot(fig_pd_weeks)
#make figure with both years combined-------------
fig_pd_weeks <- ggplot(all_weeks_pd, aes(fill = Type, y=SES, x=fct_relevel(Week, c("1","2","3","4","5","6","7","8","9","10")))) +
geom_bar(position = "dodge",stat = "identity") +
xlab("Week") +
ylab("Standard effect size")+
theme_light(base_size = 16) +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-5.9,2) +
facet_grid(Year~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
plot(fig_pd_weeks)
#make figure with both years combined-------------
fig_pd_weeks <- ggplot(all_weeks_pd, aes(fill = Type, y=SES, x=fct_relevel(Week, c("1","2","3","4","5","6","7","8","9","10")))) +
geom_bar(position = "dodge",stat = "identity") +
xlab("Week") +
ylab("Standard effect size")+
theme_light(base_size = 20) +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-5.9,2) +
facet_grid(Year~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
plot(fig_pd_weeks)
#dataframes for figures
df_site <- read.csv("results_bysite.csv")
setwd("/Users/leahvedlhuisen/Library/CloudStorage/OneDrive-UniversityofArizona/Arizona PhD/Research/Chapter 1/AllData_AmNat/files_Figures")
#dataframes for figures
df_site <- read.csv("results_bysite.csv")
df_mod <- read.csv("results_bymodule.csv")
#this data file is in the "files_Figures" folder
df_pheno <- read.csv("combined_raw_phenology.csv")
pal.bands(stepped, show.names=TRUE)
View(df_pheno)
###do all sites and years together#####
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ Site)
manualcolors<-c('mediumvioletred','cornflowerblue', 'black','wheat4','#7CE3D8','darkolivegreen1','darkblue','#DDAD4B','seagreen','mediumorchid4','orange','yellow','grey') #manually set colors for families
###do all sites and years together#####
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ Site)
###do all sites and years together#####
manualcolors_test<-c('mediumvioletred','cornflowerblue', 'black','wheat4','#7CE3D8','darkolivegreen1','darkblue','#DDAD4B','seagreen','mediumorchid4','orange','yellow','grey') #manually set colors for families
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ Site)
###do all sites and years together#####
manualcolors_test<-c('mediumvioletred','cornflowerblue', 'black','wheat4','#7CE3D8','darkolivegreen1','darkblue','#DDAD4B','seagreen','mediumorchid4','orange','yellow','grey','green','yellow1','purple','brown','turquoise','turquoise4','blue1','blue4','blue') #manually set colors for families
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ Site)
###do all sites and years together#####
manualcolors_test<-c('mediumvioletred','cornflowerblue', 'black','wheat4','#7CE3D8','darkolivegreen1','darkblue','#DDAD4B','seagreen','mediumorchid4','orange','yellow','grey','green','yellow1','purple','brown','turquoise','turquoise4','blue1','blue4','blue','white','darkolivegreen3') #manually set colors for families
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ Site)
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','Middle2','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ Site)
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','Middle2','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ factor(Site, levels = c("Road","Pfeiler","PBM")))
#change site names in data
df_pheno["Site"][df_pheno["Site"] == "Road"] <- "Low elevation (2815 m)"
View(df_pheno)
df_pheno["Site"][df_pheno["Site"] == "Pfeiler"] <- "Middle elevation (3165 m)"
df_pheno["Site"][df_pheno["Site"] == "PBM"] <- "High elevation (3380 m)"
View(df_pheno)
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','Middle2','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
df_pheno["Family"][df_pheno["Family"] == "Fabaceae "] <- "Fabaceae"
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','Middle2','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
unique(df_pheno$Family)
df_pheno["Family"][df_pheno["Family"] == "Fabaceae\n"] <- "Fabaceae"
unique(df_pheno$Family)
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','Middle2','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
###do all sites and years together#####
manualcolors_test<-c('mediumvioletred','cornflowerblue', 'black','wheat4','#7CE3D8','darkolivegreen1','darkblue','#DDAD4B','seagreen','mediumorchid4','orange','yellow','grey','green','yellow1','purple','brown','turquoise','turquoise4','brown1','blue4','blue','white','darkolivegreen3') #manually set colors for families
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','Middle2','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
###do all sites and years together#####
manualcolors_test<-c('mediumvioletred','cornflowerblue', 'black','wheat4','#7CE3D8','darkolivegreen1','darkblue','#DDAD4B','seagreen','mediumorchid4','orange','yellow','grey','moccasin','yellow1','purple','brown','turquoise','turquoise4','brown1','blue4','blue','white','darkolivegreen3') #manually set colors for families
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','Middle2','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
###do all sites and years together#####
manualcolors_test<-c('mediumvioletred','cornflowerblue', 'black','wheat4','#7CE3D8','darkolivegreen1','darkblue','#DDAD4B','seagreen','mediumorchid4','orange','yellow','grey','moccasin','yellow1','purple','brown','turquoise','turquoise4','brown1','blue4','blue','darkolivegreen3') #manually set colors for families
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','Middle2','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
###do all sites and years together#####
manualcolors_test<-c('mediumvioletred','cornflowerblue', 'black','wheat4','#7CE3D8','darkolivegreen1','darkblue','#DDAD4B','seagreen','mediumorchid4','orange','yellow','grey','moccasin','yellow1','purple','brown','turquoise','turquoise4','brown1','deeppink','blue','darkolivegreen3') #manually set colors for families
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','Middle2','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
###do all sites and years together#####
manualcolors_test<-c('mediumvioletred','cornflowerblue', 'black','wheat4','#7CE3D8','darkolivegreen1','darkblue','#DDAD4B','seagreen','mediumorchid4','orange','yellow','grey','moccasin','yellow1','purple','brown','turquoise','turquoise4','brown1','deeppink','darkgoldenrod1','darkolivegreen3') #manually set colors for families
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','Middle2','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
###do all sites and years together#####
manualcolors_test<-c('mediumvioletred','cornflowerblue', 'black','wheat4','#7CE3D8','darkolivegreen1','darkblue','#DDAD4B','seagreen','mediumorchid4','darksalmon','yellow','grey','moccasin','yellow1','purple','brown','turquoise','turquoise4','brown1','deeppink','darkgoldenrod1','darkolivegreen3') #manually set colors for families
ggplot(data = df_pheno, aes(x=factor(Module, levels = c('Beginning','Middle','Middle2','End')),y=Number_flowering, fill=Family)) +
geom_bar(stat="identity") +
theme(legend.position = "right") +
scale_fill_manual(values=manualcolors_test) +
ylab("Number of flowering units") +
xlab("Flowering module") +
theme_light(base_size = 20) +
ylim(0,1050)+
facet_grid(Year ~ factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
#make figure with both years combined-------------
fig_pd_weeks <- ggplot(all_weeks_pd, aes(fill = Type, y=SES, x=fct_relevel(Week, c("1","2","3","4","5","6","7","8","9","10")))) +
geom_bar(position = "dodge",stat = "identity") +
xlab("Week") +
ylab("Standard effect size")+
theme_light(base_size = 20) +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-5.9,2) +
facet_grid(factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)"))~Year)
plot(fig_pd_weeks)
#make figure with both years combined-------------
fig_pd_weeks <- ggplot(all_weeks_pd, aes(fill = Type, y=SES, x=fct_relevel(Week, c("1","2","3","4","5","6","7","8","9","10")))) +
geom_bar(position = "dodge",stat = "identity") +
xlab("Week") +
ylab("Standard effect size")+
theme_light(base_size = 20) +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-5.9,2) +
facet_grid(Year ~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
plot(fig_pd_weeks)
#community matrix with my data
matrix2021.mod <- read.table("2021_community_matrix_modules.txt", sep = "\t", header = T, row.names = 1)
setwd("/Users/leahvedlhuisen/Library/CloudStorage/OneDrive-UniversityofArizona/Arizona PhD/Research/Chapter 1/AllData_AmNat/files_phylogeneticmetrics_bymodule")
#community matrix with my data
matrix2021.mod <- read.table("2021_community_matrix_modules.txt", sep = "\t", header = T, row.names = 1)
pruned.tree2021 <- treedata(SBtree, unlist(matrix2021.mod[10,matrix2021.mod[10,]>0]), warnings = F)$phy
#standard effect size using picante
ses.pd(matrix2021.mod, pruned.tree2021, null.model = c("sample.pool"),
runs = 5000, iterations = 5000, include.root=TRUE) #output shows PD and SES for all modules for 2021
pd_mod21 <- pruned.tree2021 <- treedata(SBtree, unlist(matrix2021.mod[10,matrix2021.mod[10,]>0]), warnings = F)$phy
pruned.tree2021 <- treedata(SBtree, unlist(matrix2021.mod[10,matrix2021.mod[10,]>0]), warnings = F)$phy
#standard effect size using picante
pd_mod21 <- ses.pd(matrix2021.mod, pruned.tree2021, null.model = c("sample.pool"),
runs = 5000, iterations = 5000, include.root=TRUE) #output shows PD and SES for all modules for 2021
pd_mod21 = subset(pd_mod21, select = -c(ntaxa,pd.obs,pd.rand.mean,pd.rand.sd,pd.obs.rank,runs) ) #remove unnecessary columns
View(pd_mod21)
pd_mod21 <- pd_mod21 %>%
rename(SES = pd.obs.z,
P_value = pd.obs.p) #rename columns to match other datasets
View(pd_mod21)
pd_mod21 <- pd_mod21 %>%
rename(SES = pd.obs.z,
P_value = pd.obs.p) #rename columns to match other datasets
View(pd_mod21)
pd_mod21 <- pd_mod21 %>%
rename(SES = pd.obs.z,
P_value = pd.obs.p) #rename columns to match other datasets
pd_mod21$Type <- c("PD") #add column for metric type
View(pd_mod21)
pd_mod21$Year <- c("2021")
View(pd_mod21)
pd_weeks21$Site <- c("Low elevation (2815 m)","Low elevation (2815 m)","Low elevation (2815 m)","Middle elevation (3165 m)", "Middle elevation (3165 m)","Middle elevation (3165 m)","High elevation (3380 m)","High elevation (3380 m)","High elevation (3380 m)") #add column for site name
pd_mod21$Site <- c("Low elevation (2815 m)","Low elevation (2815 m)","Low elevation (2815 m)","Middle elevation (3165 m)", "Middle elevation (3165 m)","Middle elevation (3165 m)","High elevation (3380 m)","High elevation (3380 m)","High elevation (3380 m)") #add column for site name
pd_mod21<- pd_mod21[-c(10)]
View(pd_mod21)
pd_mod21<- pd_mod21[-c(10),]
View(pd_mod21)
pd_mod21$Site <- c("Low elevation (2815 m)","Low elevation (2815 m)","Low elevation (2815 m)","Middle elevation (3165 m)", "Middle elevation (3165 m)","Middle elevation (3165 m)","High elevation (3380 m)","High elevation (3380 m)","High elevation (3380 m)") #add column for site name
pd_mod21$Module <- c("Beginning","Middle","End","Beginning","Middle","End","Beginning","Middle","End")
pd_mod21 <- pd_mod21 %>%
rename(SES = pd.obs.z,
P_value = pd.obs.p) #rename columns to match other datasets
pd_mod21 <- pd_mod21 %>%
rename(SES = pd.obs.z,
P_value = pd.obs.p) #rename columns to match other datasets
pd_mod21 <- pd_mod21 %>% rename(SES = pd.obs.z,
P_value = pd.obs.p) #rename columns to match other datasets
pd_mod21 <- pd_mod21 %>% rename(SES = pd.obs.z,
P_value = pd.obs.p) #rename columns to match other datasets
library(tidyverse)
pd_mod21 <- pd_mod21 %>% rename(SES = pd.obs.z,
P_value = pd.obs.p) #rename columns to match other datasets
names(pd_mod21)[names(pd_mod21) == "pd.obs.z"] <- "SES"
names(pd_mod21)[names(pd_mod21) == "pd.obs.p"] <- "P_values" #rename columns to match other datasets
View(pd_mod21)
##2022#####################################
matrix2022.mod <- read.table("2022_community_matrix_modules.txt", sep = "\t", header = T, row.names = 1)
pruned.tree2022 <- treedata(SBtree, unlist(matrix2022.mod[11,matrix2022.mod[11,]>0]), warnings = F)$phy #prune tree
pd_mod22<- ses.pd(matrix2022.mod, pruned.tree2022, null.model = c("sample.pool"),
runs = 5000, iterations = 5000, include.root=TRUE) #output shows PD and SES for all modules for 2022
#format data table
pd_mod22 = subset(pd_mod22, select = -c(ntaxa,pd.obs,pd.rand.mean,pd.rand.sd,pd.obs.rank,runs) ) #remove unnecessary columns
names(pd_mod22)[names(pd_mod22) == "pd.obs.z"] <- "SES"
names(pd_mod22)[names(pd_mod22) == "pd.obs.p"] <- "P_values" #rename columns to match other datasets
View(pd_mod22)
pd_mod22<- pd_mod22[-c(10),]
View(pd_mod22)
pd_mod22<- pd_mod22[-c(10),]
View(pd_mod22)
pd_mod22$Type <- c("PD") #add column for metric type
View(pd_mod22)
pd_mod22<- ses.pd(matrix2022.mod, pruned.tree2022, null.model = c("sample.pool"),
runs = 5000, iterations = 5000, include.root=TRUE) #output shows PD and SES for all modules for 2022
View(pd_mod22)
#format data table
pd_mod22 = subset(pd_mod22, select = -c(ntaxa,pd.obs,pd.rand.mean,pd.rand.sd,pd.obs.rank,runs) ) #remove unnecessary columns
names(pd_mod22)[names(pd_mod22) == "pd.obs.z"] <- "SES"
names(pd_mod22)[names(pd_mod22) == "pd.obs.p"] <- "P_values" #rename columns to match other datasets
View(pd_mod22)
pd_mod22<- pd_mod22[-c(11),]
View(pd_mod22)
pd_mod22$Type <- c("PD") #add column for metric type
pd_mod22$Site <- c("Low elevation (2815 m)","Low elevation (2815 m)","Low elevation (2815 m)","Low elevation (2815 m)","Middle elevation (3165 m)", "Middle elevation (3165 m)","Middle elevation (3165 m)","High elevation (3380 m)","High elevation (3380 m)","High elevation (3380 m)") #add column for site name
View(pd_mod22)
pd_mod22$Year <- c("2022")
pd_mod22$Module <- c("Beginning","Middle1","Middle2","End","Beginning","Middle","End","Beginning","Middle","End")
View(pd_mod22)
pruned.tree2021 <- treedata(SBtree, unlist(matrix2021[4,matrix2021[4,]>0]), warnings = F)$phy
#community matrix with my data
matrix2021.mod <- read.table("2021_community_matrix_modules.txt", sep = "\t", header = T, row.names = 1)
View(matrix2021.mod)
###SES MPD 2021#########
mpd_mod21<-ses.mpd(matrix2021.mod, dist.mat2021, null.model = c("sample.pool"),
abundance.weighted = FALSE, runs = 5000, iterations = 5000) #output shows MPD values and SES for all modules in all 2021 sites
dist.mat2021 <- cophenetic(pruned.tree2021)
###SES MPD 2021#########
mpd_mod21<-ses.mpd(matrix2021.mod, dist.mat2021, null.model = c("sample.pool"),
abundance.weighted = FALSE, runs = 5000, iterations = 5000) #output shows MPD values and SES for all modules in all 2021 sites
#format data table
mpd_mod21 = subset(mpd_mod21, select = -c(ntaxa,mpd.obs,mpd.rand.mean,mpd.rand.sd,mpd.obs.rank,runs) ) #remove unnecessary columns
View(mpd_mod21)
names(mpd_mod21)[names(mpd_mod21) == "mpd.obs.z"] <- "SES"
names(mpd_mod21)[names(mpd_mod21) == "mpd.obs.p"] <- "P_values" #rename columns to match other datasets
View(mpd_mod21)
mpd_mod21<- mpd_mod21[-c(10),]
View(mpd_mod21)
mpd_mod21$Type <- c("MPD") #add column for metric type
mpd_mod21$Site <- c("Low elevation (2815 m)","Low elevation (2815 m)","Low elevation (2815 m)","Middle elevation (3165 m)", "Middle elevation (3165 m)","Middle elevation (3165 m)","High elevation (3380 m)","High elevation (3380 m)","High elevation (3380 m)") #add column for site name
mpd_mod21$Year <- c("2021")
mpd_mod21$Module <- c("Beginning","Middle","End","Beginning","Middle","End","Beginning","Middle","End")
View(mpd_mod21)
View(mpd_mod21)
dist.mat2022 <- cophenetic(pruned.tree2022) #make 2022 distane matrix from pruned phylogeny
###SES MPD 2022######
mpd_mod22<-ses.mpd(matrix2022.mod, dist.mat2022, null.model = c("sample.pool"),
abundance.weighted = FALSE, runs = 5000, iterations = 5000) #output shows MPD and SES for all modules in all sites for 2022
View(mpd_mod22)
#format data table
mpd_mod22 = subset(mpd_mod22, select = -c(ntaxa,mpd.obs,mpd.rand.mean,mpd.rand.sd,mpd.obs.rank,runs) ) #remove unnecessary columns
View(mpd_mod22)
names(mpd_mod22)[names(mpd_mod22) == "mpd.obs.z"] <- "SES"
names(mpd_mod22)[names(mpd_mod22) == "mpd.obs.p"] <- "P_values" #rename columns to match other datasets
mpd_mod22<- mpd_mod22[-c(11),]
View(mpd_mod22)
mpd_mod22$Type <- c("MPD") #add column for metric type
mpd_mod22$Site <- c("Low elevation (2815 m)","Low elevation (2815 m)","Low elevation (2815 m)","Low elevation (2815 m)","Middle elevation (3165 m)", "Middle elevation (3165 m)","Middle elevation (3165 m)","High elevation (3380 m)","High elevation (3380 m)","High elevation (3380 m)") #add column for site name
View(mpd_mod22)
mpd_mod22$Year <- c("2022")
mpd_mod22$Module <- c("Beginning","Middle1","Middle2","End","Beginning","Middle","End","Beginning","Middle","End")
View(mpd_mod22)
###SES 2021 MNTD###########
mntd_mod21 <- ses.mntd(matrix2021.mod, dist.mat2021, null.model = c("sample.pool"),
abundance.weighted=FALSE, runs = 5000, iterations = 5000) #shows MNTD values and SES for all modules in all sites for 2021
#format data table
mntd_mod21 = subset(mntd_mod21, select = -c(ntaxa,mntd.obs,mntd.rand.mean,mntd.rand.sd,mntd.obs.rank,runs) ) #remove unnecessary columns
View(mntd_mod21)
names(mntd_mod21)[names(mntd_mod21) == "mntd.obs.z"] <- "SES"
names(mntd_mod21)[names(mntd_mod21) == "mntd.obs.p"] <- "P_values" #rename columns to match other datasets
mntd_mod21<- mntd_mod21[-c(10),]
View(mntd_mod21)
mntd_mod21$Type <- c("MNTD") #add column for metric type
mntd_mod21$Site <- c("Low elevation (2815 m)","Low elevation (2815 m)","Low elevation (2815 m)","Middle elevation (3165 m)", "Middle elevation (3165 m)","Middle elevation (3165 m)","High elevation (3380 m)","High elevation (3380 m)","High elevation (3380 m)") #add column for site name
mntd_mod21$Year <- c("2021")
mntd_mod21$Module <- c("Beginning","Middle","End","Beginning","Middle","End","Beginning","Middle","End")
View(mntd_mod21)
###SES 2022 MNTD############
mntd_mod22 <- ses.mntd(matrix2022.mod, dist.mat2022, null.model = c("sample.pool"),
abundance.weighted=FALSE, runs = 5000, iterations = 5000) #shows MNTD values and SES for all modules in all sites for 2022
#format data table
mntd_mod22 = subset(mntd_mod22, select = -c(ntaxa,mntd.obs,mntd.rand.mean,mntd.rand.sd,mntd.obs.rank,runs) ) #remove unnecessary columns
names(mntd_mod22)[names(mntd_mod22) == "mntd.obs.p"] <- "P_values" #rename columns to match other datasets
View(mntd_mod22)
names(mntd_mod22)[names(mntd_mod22) == "mntd.obs.z"] <- "SES"
names(mntd_mod22)[names(mntd_mod22) == "mntd.obs.p"] <- "P_values" #rename columns to match other datasets
View(mntd_mod22)
mntd_mod22<- mntd_mod22[-c(11),]
View(mntd_mod22)
mntd_mod22$Type <- c("MNTD") #add column for metric type
mntd_mod22$Site <- c("Low elevation (2815 m)","Low elevation (2815 m)","Low elevation (2815 m)","Low elevation (2815 m)","Middle elevation (3165 m)", "Middle elevation (3165 m)","Middle elevation (3165 m)","High elevation (3380 m)","High elevation (3380 m)","High elevation (3380 m)") #add column for site name
mntd_mod22$Year <- c("2022")
mntd_mod22$Module <- c("Beginning","Middle1","Middle2","End","Beginning","Middle","End","Beginning","Middle","End")
View(mntd_mod22)
#combine into one big dataset-------------
all_mod2021 <- rbind(pd_mod21,mpd_mod21,mntd_mod21)
all_mod2022 <- rbind(pd_mod22, mpd_mod22,mntd_mod22)
all_mod <- rbind(all_mod2021,all_mod2022)
View(all_mod)
pd_mod22$Module <- c("Beginning","Middle","Middle2","End","Beginning","Middle","End","Beginning","Middle","End")
mpd_mod22$Module <- c("Beginning","Middle","Middle2","End","Beginning","Middle","End","Beginning","Middle","End")
mntd_mod22$Module <- c("Beginning","Middle","Middle2","End","Beginning","Middle","End","Beginning","Middle","End")
#combine into one big dataset-------------
all_mod2021 <- rbind(pd_mod21,mpd_mod21,mntd_mod21)
all_mod2022 <- rbind(pd_mod22, mpd_mod22,mntd_mod22)
all_mod <- rbind(all_mod2021,all_mod2022)
View(all_mod)
#make figure with both years combined-------------
fig_pd_mod <- ggplot(all_mod, aes(fill = Type, y=SES, x=fct_relevel(Module, c("Beginning","Middle","Middle2","End")))) +
geom_bar(position = "dodge",stat = "identity") +
xlab("Module") +
ylab("Standard effect size")+
theme_light(base_size = 20) +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-3,2) +
facet_grid(Year ~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
plot(fig_pd_mod)
#make figure with both years combined-------------
fig_pd_mod <- ggplot(all_mod, aes(fill = Type, y=SES, x=fct_relevel(Module, c("Beginning","Middle","Middle2","End")))) +
geom_bar(position = "dodge",stat = "identity") +
xlab("Module") +
ylab("Standard effect size")+
theme_light(base_size = 20) +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-5,3) +
facet_grid(Year ~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
plot(fig_pd_mod)
#make figure with both years combined-------------
fig_pd_mod <- ggplot(all_mod, aes(fill = Type, y=SES, x=fct_relevel(Module, c("Beginning","Middle","Middle2","End")))) +
geom_bar(position = "dodge",stat = "identity") +
xlab("Module") +
ylab("Standard effect size")+
theme_light(base_size = 20) +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-5.2,3) +
facet_grid(Year ~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
plot(fig_pd_mod)
#make figure with both years combined-------------
fig_pd_mod <- ggplot(all_mod, aes(fill = Type, y=SES, x=fct_relevel(Module, c("Beginning","Middle","Middle2","End")))) +
geom_bar(position = "dodge",stat = "identity") +
xlab("Module") +
ylab("Standard effect size")+
theme_light(base_size = 20) +
guides(fill=guide_legend(title="Phylogenetic metric"))+
scale_fill_manual(values=c("#c385b3",
"#cdd870",
"#4ea6c4"))+
ylim(-5.2,2.2) +
facet_grid(Year ~factor(Site, levels = c("Low elevation (2815 m)","Middle elevation (3165 m)","High elevation (3380 m)")))
plot(fig_pd_mod)
